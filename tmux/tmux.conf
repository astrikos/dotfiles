
# Use backtick as the prefix
# Do it just like this or you will not 
# be able to use type backtick literally
unbind C-b
set -g prefix C-a
bind ` send-prefix
bind-key L last-window

# split panes using | and -
# start them also in cwd
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# start new windows in cwd
bind c new-window -c "#{pane_current_path}"

set -g default-terminal "screen-256color"

set -g default-command "reattach-to-user-namespace -l zsh"
set-option -g default-command /bin/zsh
set-option -g default-shell /bin/zsh

# Start numbering at 1
set -g base-index 1

# Allow mouse
set-option -g mouse on

# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Basically allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use '<prefix>-a' <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Turn on vi bindings in copy mode
set-option -g status-keys vi
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# use vim-like keys for splits and windows
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Allow keys to be used immediately after changing windows
# set-option -g repeat-time 0

# bind-key M-7 resize-pane -t 1 -x 90
# bind-key M-8 resize-pane -t 1 -x 60
# bind-key M-9 resize-pane -t 1 -x 30
# bind-key M-0 resize-pane -t 0 -x 30

bind -r C-h resize-pane -L 10
bind -r C-j resize-pane -D 3
bind -r C-k resize-pane -U 3
bind -r C-l resize-pane -R 10

# Run tests easily
bind-key / run-shell "tmux send-keys -t bottom '!!' C-m C-m"

######################
#### DESIGN CHANGES ###
#######################

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set -g status-style bg='colour235',fg='yellow',dim

# show host name on left side of status bar
set -g status-left-length 70
set -g status-left "#[fg=green]: #h : "

# show session name, window & pane number, date and time on right side of status bar
set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %H:%M %d/%m/%Y #[fg=green]::"

# ----------------------
# Windows
# ----------------------
# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-style bg='colour236',fg='brightblue',dim

setw -g window-status-current-style bg='colour34',fg='colour48',bold
setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '

set -g window-style 'fg=colour245,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# ----------------------
# Panes
# ----------------------
set -g pane-border-style bg='colour0',fg='colour87'
set -g pane-active-border-style bg='colour0',fg='colour126'
